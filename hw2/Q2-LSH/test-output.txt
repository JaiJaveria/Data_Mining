mkdir -p obj
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -I external/googletest/googletest -c -o obj/gtest-all.o external/googletest/googletest/src/gtest-all.cc
mkdir -p obj
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/gtest_main.o external/googletest/googletest/src/gtest_main.cc
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/bit_packed_flat_hash_table_test.o src/test/bit_packed_flat_hash_table_test.cc
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/bit_packed_flat_hash_table_test obj/gtest_main.o obj/gtest-all.o obj/bit_packed_flat_hash_table_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/bit_packed_vector_test.o src/test/bit_packed_vector_test.cc
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/bit_packed_vector_test obj/gtest_main.o obj/gtest-all.o obj/bit_packed_vector_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/composite_hash_table_test.o src/test/composite_hash_table_test.cc
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/composite_hash_table_test obj/gtest_main.o obj/gtest-all.o obj/composite_hash_table_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/cosine_distance_test.o src/test/cosine_distance_test.cc
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/cosine_distance.h:7,
                 from src/test/cosine_distance_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_conj_product_op<float, float>; LhsType = const Eigen::Matrix<float, -1, 1>; RhsType = const Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Matrix<float, -1, 1>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:45:10:   required from ‘const Eigen::CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::binaryExpr(const Eigen::MatrixBase<OtherDerived>&, const CustomBinaryOp&) const [with CustomBinaryOp = Eigen::internal::scalar_conj_product_op<float, float>; OtherDerived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Dot.h:36:48:   required from ‘static Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::run(const Eigen::MatrixBase<Derived>&, const Eigen::MatrixBase<U>&) [with T = Eigen::Matrix<float, -1, 1>; U = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; bool NeedToTranspose = false; Eigen::internal::dot_nocheck<T, U, NeedToTranspose>::ResScalar = float]’
external/eigen/Eigen/src/Core/Dot.h:81:58:   required from ‘typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType Eigen::MatrixBase<Derived>::dot(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<float, -1, 1>; typename Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>::ReturnType = float]’
src/include/falconn/core/cosine_distance.h:72:12:   required from ‘CoordinateType falconn::core::CosineDistanceDense<CoordinateType>::operator()(const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&) [with Derived1 = Eigen::Matrix<float, -1, 1>; Derived2 = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; CoordinateType = float]’
src/test/cosine_distance_test.cc:77:44:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:448,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/cosine_distance.h:7,
                 from src/test/cosine_distance_test.cc:1:
external/eigen/Eigen/src/Core/MapBase.h:284:14: note: because ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’
  284 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/cosine_distance_test obj/gtest_main.o obj/gtest-all.o obj/cosine_distance_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/cpp_wrapper_test.o src/test/cpp_wrapper_test.cc
In file included from src/include/falconn/wrapper/cpp_wrapper_impl.h:9,
                 from src/include/falconn/lsh_nn_table.h:484,
                 from src/test/cpp_wrapper_test.cc:1:
src/include/falconn/wrapper/data_storage_adapter.h: In instantiation of ‘static std::unique_ptr<falconn::core::ArrayDataStorage<PointType, KeyType> > falconn::wrapper::DataStorageAdapter<std::vector<PointType> >::construct_data_storage(const std::vector<PointType>&) [with KeyType = int; PointType = Eigen::Matrix<float, -1, 1>]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:643:79:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
src/include/falconn/wrapper/data_storage_adapter.h:36:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
   36 |     return std::move(res);
      |                         ^
src/include/falconn/wrapper/data_storage_adapter.h:36:25: note: remove ‘std::move’ call
src/include/falconn/wrapper/data_storage_adapter.h: In instantiation of ‘static std::unique_ptr<falconn::core::ArrayDataStorage<PointType, KeyType> > falconn::wrapper::DataStorageAdapter<std::vector<PointType> >::construct_data_storage(const std::vector<PointType>&) [with KeyType = int; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:643:79:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/test/cpp_wrapper_test.cc:100:44:   required from here
src/include/falconn/wrapper/data_storage_adapter.h:36:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
src/include/falconn/wrapper/data_storage_adapter.h:36:25: note: remove ‘std::move’ call
In file included from src/include/falconn/lsh_nn_table.h:484,
                 from src/test/cpp_wrapper_test.cc:1:
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘static std::unique_ptr<falconn::core::CrossPolytopeHashDense<CoordinateType, HashType> > falconn::wrapper::PointTypeTraitsInternal<Eigen::Matrix<Scalar, -1, 1> >::construct_cp_hash(const falconn::LSHConstructionParameters&) [with HashType = unsigned int; CoordinateType = float]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:707:69:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
   49 |     return std::move(res);
      |                         ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘static std::unique_ptr<falconn::core::CrossPolytopeHashDense<CoordinateType, HashType> > falconn::wrapper::PointTypeTraitsInternal<Eigen::Matrix<Scalar, -1, 1> >::construct_cp_hash(const falconn::LSHConstructionParameters&) [with HashType = long unsigned int; CoordinateType = float]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:707:69:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<long unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:665:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘static std::unique_ptr<falconn::core::CrossPolytopeHashSparse<CoordinateType, HashType, IndexType> > falconn::wrapper::PointTypeTraitsInternal<std::vector<std::pair<IndexType, CoordinateType> > >::construct_cp_hash(const falconn::LSHConstructionParameters&) [with HashType = unsigned int; CoordinateType = float; IndexType = int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:707:69:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/test/cpp_wrapper_test.cc:100:44:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:73:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
   73 |     return std::move(res);
      |                         ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:73:25: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘static std::unique_ptr<falconn::core::CrossPolytopeHashSparse<CoordinateType, HashType, IndexType> > falconn::wrapper::PointTypeTraitsInternal<std::vector<std::pair<IndexType, CoordinateType> > >::construct_cp_hash(const falconn::LSHConstructionParameters&) [with HashType = long unsigned int; CoordinateType = float; IndexType = int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:707:69:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<long unsigned int>; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:665:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/test/cpp_wrapper_test.cc:100:44:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:73:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
src/include/falconn/wrapper/cpp_wrapper_impl.h:73:25: note: remove ‘std::move’ call
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:278:27:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_uninitialized.h:134:15:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<Eigen::Matrix<float, -1, 1>*>; _ForwardIterator = Eigen::Matrix<float, -1, 1>*]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_uninitialized.h:289:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<Eigen::Matrix<float, -1, 1>*>; _ForwardIterator = Eigen::Matrix<float, -1, 1>*; _Tp = Eigen::Matrix<float, -1, 1>]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_uninitialized.h:311:2:   required from ‘_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = Eigen::Matrix<float, -1, 1>*; _ForwardIterator = Eigen::Matrix<float, -1, 1>*; _Allocator = std::allocator<Eigen::Matrix<float, -1, 1> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/vector.tcc:474:3:   required from ‘void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const Eigen::Matrix<float, -1, 1, 0, -1, 1>&}; _Tp = Eigen::Matrix<float, -1, 1>; _Alloc = std::allocator<Eigen::Matrix<float, -1, 1> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<Eigen::Matrix<float, -1, 1>*, std::vector<Eigen::Matrix<float, -1, 1> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = Eigen::Matrix<float, -1, 1>*]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_vector.h:1195:4:   required from ‘void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Eigen::Matrix<float, -1, 1>; _Alloc = std::allocator<Eigen::Matrix<float, -1, 1> >; std::vector<_Tp, _Alloc>::value_type = Eigen::Matrix<float, -1, 1>]’
src/test/cpp_wrapper_test.cc:46:22:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:418,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/Product.h: In instantiation of ‘Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; _Rhs = Eigen::Matrix<float, -1, 1>; int Option = 0; Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<float, -1, 1>]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:412:10:   required from ‘const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:382:66:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float, unsigned int>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float, unsigned int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float, unsigned int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:834:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/Product.h:93:86: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
   93 |     EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)
      |                                                                                      ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:422:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; Derived = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast32_t = long int]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:834:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashSparse<float, unsigned int, int>, std::default_delete<falconn::core::HyperplaneHashSparse<float, unsigned int, int> > > >; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/test/cpp_wrapper_test.cc:100:44:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>::Block(const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:451,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/Block.h: In instantiation of ‘Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’:
external/eigen/Eigen/src/Core/Block.h:166:59:   required from ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/Block.h:142:59:   required from ‘Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/VectorBlock.h:78:61:   required from ‘Eigen::VectorBlock<MatrixType, Size>::VectorBlock(VectorType&, Eigen::Index, Eigen::Index) [with VectorType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int Size = -1; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/../plugins/BlockMethods.h:900:10:   required from ‘Eigen::DenseBase<Derived>::ConstSegmentReturnType Eigen::DenseBase<Derived>::segment(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; Eigen::DenseBase<Derived>::ConstSegmentReturnType = const Eigen::VectorBlock<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1>; Eigen::Index = long int]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:422:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:73:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashSparse<float, unsigned int, int>, std::default_delete<falconn::core::HyperplaneHashSparse<float, unsigned int, int> > > >; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/test/cpp_wrapper_test.cc:100:44:   required from here
external/eigen/Eigen/src/Core/Block.h:375:62: warning: implicitly-declared ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  375 |         m_xpr(xpr), m_startRow(startRow), m_startCol(startCol)
      |                                                              ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashSparse<float, unsigned int, int>, std::default_delete<falconn::core::HyperplaneHashSparse<float, unsigned int, int> > > >; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/test/cpp_wrapper_test.cc:100:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::CrossPolytopeHashDense<float, unsigned int>, std::default_delete<falconn::core::CrossPolytopeHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:708:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashSparse<float, unsigned int, int>, std::default_delete<falconn::core::HyperplaneHashSparse<float, unsigned int, int> > > >; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; PointSet = std::vector<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >]’
src/test/cpp_wrapper_test.cc:100:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:472,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/ProductEvaluators.h: In instantiation of ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’:
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/ProductEvaluators.h:378:15: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
  378 |     LhsNested actual_lhs(lhs);
      |               ^~~~~~~~~~
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:473,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = float; LhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 0>; bool ConjugateLhs = false; RhsScalar = float; RhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 1>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = float]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:239:134:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:186:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  186 |   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:187:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  187 |   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >]’
external/eigen/Eigen/src/Core/GeneralProduct.h:282:40:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:448,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/MapBase.h:284:14: note: because ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’
  284 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 23 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/test/cpp_wrapper_test.cc:51:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/include/falconn/lsh_nn_table.h:484,
                 from src/test/cpp_wrapper_test.cc:1:
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, long unsigned int, int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, long unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::CrossPolytopeHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; LSHFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:413:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_all_tables(const DerivedVectorT&, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:47:7:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::HashTransformation::apply(const VectorT&, falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType*) const [with Derived = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/wrapper/../core/lsh_function_helpers.h:108:5:   required from ‘void falconn::core::HashObjectQuery<HashFunction>::get_probes_by_table(const VectorType&, std::vector<std::vector<typename HashFunction::HashType> >*, int_fast64_t) [with HashFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; falconn::core::HashObjectQuery<HashFunction>::VectorType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; typename HashFunction::HashType = unsigned int; int_fast64_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:137:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::Query::get_candidates_with_duplicates(const PointType&, int_fast64_t, int_fast64_t, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’
src/include/falconn/wrapper/../core/nn_query.h:191:5:   required from ‘void falconn::core::NearestNeighborQuery<LSHTableQuery, LSHTablePointType, LSHTableKeyType, ComparisonPointType, DistanceType, DistanceFunction, DataStorage>::get_candidates_with_duplicates(const LSHTablePointType&, int_fast64_t, int_fast64_t, std::vector<IndexType>*) [with LSHTableQuery = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >::Query; LSHTablePointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; LSHTableKeyType = int; ComparisonPointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:428:5:   required from ‘void falconn::wrapper::LSHNNQueryPool<PointType, KeyType, DistanceType, LSHTable, ScalarType, DistanceFunction, DataStorage>::get_candidates_with_duplicates(const PointType&, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; ScalarType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:425:8:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/../core/hyperplane_hash.h:47:7:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::HashTransformation::apply(const VectorT&, falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType*) const [with Derived = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/wrapper/../core/lsh_function_helpers.h:108:5:   required from ‘void falconn::core::HashObjectQuery<HashFunction>::get_probes_by_table(const VectorType&, std::vector<std::vector<typename HashFunction::HashType> >*, int_fast64_t) [with HashFunction = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; falconn::core::HashObjectQuery<HashFunction>::VectorType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; typename HashFunction::HashType = unsigned int; int_fast64_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:137:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::Query::get_candidates_with_duplicates(const PointType&, int_fast64_t, int_fast64_t, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float, unsigned int, int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’
src/include/falconn/wrapper/../core/nn_query.h:191:5:   required from ‘void falconn::core::NearestNeighborQuery<LSHTableQuery, LSHTablePointType, LSHTableKeyType, ComparisonPointType, DistanceType, DistanceFunction, DataStorage>::get_candidates_with_duplicates(const LSHTablePointType&, int_fast64_t, int_fast64_t, std::vector<IndexType>*) [with LSHTableQuery = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >::Query; LSHTablePointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; LSHTableKeyType = int; ComparisonPointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>; int_fast64_t = long int]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:428:5:   required from ‘void falconn::wrapper::LSHNNQueryPool<PointType, KeyType, DistanceType, LSHTable, ScalarType, DistanceFunction, DataStorage>::get_candidates_with_duplicates(const PointType&, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; DistanceType = float; LSHTable = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float, unsigned int, int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int> >; ScalarType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float, int>; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int>]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:425:8:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/test/cpp_wrapper_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/cpp_wrapper_test obj/gtest_main.o obj/gtest-all.o obj/cpp_wrapper_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/data_storage_test.o src/test/data_storage_test.cc
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_storage.h:9,
                 from src/test/data_storage_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/data_storage.h:343:9:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_storage.h:9,
                 from src/test/data_storage_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_storage.h:9,
                 from src/test/data_storage_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Dot.h:147:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/math_helpers.h:36:59:   required from ‘static void falconn::core::NormalizationHelper<Eigen::Matrix<Scalar, -1, 1> >::normalize(falconn::DenseVector<CoordinateType>*) [with CoordinateType = float; falconn::DenseVector<CoordinateType> = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/math_helpers.h:41:40:   required from ‘void falconn::core::normalize(Point*) [with Point = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/data_transformation.h:27:14:   required from ‘void falconn::core::NormalizingTransformation<Point>::apply(Point*) const [with Point = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/data_storage.h:352:7:   required from ‘const PointType& falconn::core::TransformedDataStorage<PointType, Transformation, InnerDataStorage, KeyType>::FullSequenceIterator::get_point() [with PointType = Eigen::Matrix<float, -1, 1>; Transformation = falconn::core::NormalizingTransformation<Eigen::Matrix<float, -1, 1> >; InnerDataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; KeyType = int]’
src/test/data_storage_test.cc:44:3:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_storage.h:9,
                 from src/test/data_storage_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/data_storage_test obj/gtest_main.o obj/gtest-all.o obj/data_storage_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/data_transformation_test.o src/test/data_transformation_test.cc
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::mul_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::mul_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::mul_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::mul_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::mul_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::mul_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:21:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator*=(const Scalar&) [with Derived = Eigen::Matrix<float, -1, 1>; Eigen::DenseBase<Derived>::Scalar = float]’
src/test/data_transformation_test.cc:50:9:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/data_transformation.h:45:15:   required from ‘falconn::core::CenteringTransformation<Point, DataStorage>::CenteringTransformation(const DataStorage&) [with Point = Eigen::Matrix<float, -1, 1>; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >]’
src/test/data_transformation_test.cc:78:77:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::div_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<float, -1, 1>; Eigen::DenseBase<Derived>::Scalar = float]’
src/include/falconn/core/data_transformation.h:50:13:   required from ‘falconn::core::CenteringTransformation<Point, DataStorage>::CenteringTransformation(const DataStorage&) [with Point = Eigen::Matrix<float, -1, 1>; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >]’
src/test/data_transformation_test.cc:78:77:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::sub_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::sub_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::sub_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::sub_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::sub_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:164:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator-=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/data_transformation.h:54:8:   required from ‘void falconn::core::CenteringTransformation<Point, DataStorage>::apply(Point*) const [with Point = Eigen::Matrix<float, -1, 1>; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >]’
src/test/data_transformation_test.cc:82:27:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:208:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) [with _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/data_transformation.h:40:13:   required from ‘falconn::core::CenteringTransformation<Point, DataStorage>::CenteringTransformation(const DataStorage&) [with Point = Eigen::Matrix<float, -1, 1>; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >]’
src/test/data_transformation_test.cc:78:77:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/data_transformation.h:6,
                 from src/test/data_transformation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/data_transformation_test obj/gtest_main.o obj/gtest-all.o obj/data_transformation_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/euclidean_distance_test.o src/test/euclidean_distance_test.cc
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/euclidean_distance.h:7,
                 from src/test/euclidean_distance_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, -1, 1>; RhsType = const Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Matrix<float, -1, 1>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:19:1:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<float, -1, 1>; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float]’
src/include/falconn/core/euclidean_distance.h:72:16:   required from ‘CoordinateType falconn::core::EuclideanDistanceDense<CoordinateType>::operator()(const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&) [with Derived1 = Eigen::Matrix<float, -1, 1>; Derived2 = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; CoordinateType = float]’
src/test/euclidean_distance_test.cc:77:44:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:448,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/euclidean_distance.h:7,
                 from src/test/euclidean_distance_test.cc:1:
external/eigen/Eigen/src/Core/MapBase.h:284:14: note: because ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’
  284 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/euclidean_distance_test obj/gtest_main.o obj/gtest-all.o obj/euclidean_distance_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/flat_hash_table_test.o src/test/flat_hash_table_test.cc
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/flat_hash_table_test obj/gtest_main.o obj/gtest-all.o obj/flat_hash_table_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/heap_test.o src/test/heap_test.cc
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/heap_test obj/gtest_main.o obj/gtest-all.o obj/heap_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/hyperplane_hash_test.o src/test/hyperplane_hash_test.cc
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >]’
src/include/falconn/core/hyperplane_hash.h:413:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_all_tables(const DerivedVectorT&, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:112:5:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::hash(const VectorType&, std::vector<KeyType>*, falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType*) const [with Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::VectorType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType = Eigen::Matrix<float, -1, 1>]’
src/test/hyperplane_hash_test.cc:47:25:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:418,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/Product.h: In instantiation of ‘Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; _Rhs = Eigen::Matrix<float, -1, 1>; int Option = 0; Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<float, -1, 1>]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:412:10:   required from ‘const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>]’
src/include/falconn/core/hyperplane_hash.h:382:66:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/test/hyperplane_hash_test.cc:515:55:   required from here
external/eigen/Eigen/src/Core/Product.h:93:86: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
   93 |     EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)
      |                                                                                      ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >]’
src/include/falconn/core/hyperplane_hash.h:422:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/test/hyperplane_hash_test.cc:553:55:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>::Block(const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:278:27:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:176:35:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Derived = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:413:12:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_all_tables(const DerivedVectorT&, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:112:5:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::hash(const VectorType&, std::vector<KeyType>*, falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType*) const [with Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::VectorType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType = Eigen::Matrix<float, -1, 1>]’
src/test/hyperplane_hash_test.cc:47:25:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:249:28:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:451,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/Block.h: In instantiation of ‘Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’:
external/eigen/Eigen/src/Core/Block.h:166:59:   required from ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/Block.h:142:59:   required from ‘Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/VectorBlock.h:78:61:   required from ‘Eigen::VectorBlock<MatrixType, Size>::VectorBlock(VectorType&, Eigen::Index, Eigen::Index) [with VectorType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int Size = -1; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/../plugins/BlockMethods.h:900:10:   required from ‘Eigen::DenseBase<Derived>::ConstSegmentReturnType Eigen::DenseBase<Derived>::segment(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; Eigen::DenseBase<Derived>::ConstSegmentReturnType = const Eigen::VectorBlock<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1>; Eigen::Index = long int]’
src/include/falconn/core/hyperplane_hash.h:422:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/test/hyperplane_hash_test.cc:553:55:   required from here
external/eigen/Eigen/src/Core/Block.h:375:62: warning: implicitly-declared ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  375 |         m_xpr(xpr), m_startRow(startRow), m_startCol(startCol)
      |                                                              ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:422:12:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/test/hyperplane_hash_test.cc:553:55:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
external/eigen/Eigen/src/Core/CwiseNullaryOp.h:327:20:   required from ‘Derived& Eigen::DenseBase<Derived>::setConstant(const Scalar&) [with Derived = Eigen::Matrix<float, -1, 1>; Eigen::DenseBase<Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/CwiseNullaryOp.h:518:31:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::setZero(Eigen::Index) [with Derived = Eigen::Matrix<float, -1, 1>; Eigen::Index = long int]’
src/test/hyperplane_hash_test.cc:194:17:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:473,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = float; LhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 0>; bool ConjugateLhs = false; RhsScalar = float; RhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 1>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = float]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:239:134:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:537:7:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:176:35:   required from here
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:186:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  186 |   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:187:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  187 |   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >]’
external/eigen/Eigen/src/Core/GeneralProduct.h:282:40:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:537:7:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:176:35:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:448,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/MapBase.h:284:14: note: because ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’
  284 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:537:7:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:176:35:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:472,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/ProductEvaluators.h: In instantiation of ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’:
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/test/hyperplane_hash_test.cc:515:55:   required from here
external/eigen/Eigen/src/Core/ProductEvaluators.h:378:15: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
  378 |     LhsNested actual_lhs(lhs);
      |               ^~~~~~~~~~
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:537:7:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:176:35:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:537:7:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:176:35:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Matrix<float, -1, -1>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:537:7:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, -1, -1>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/hyperplane_hash_test.cc:176:35:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/hyperplane_hash.h:11,
                 from src/test/hyperplane_hash_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/hyperplane_hash_test obj/gtest_main.o obj/gtest-all.o obj/hyperplane_hash_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/incremental_sorter_test.o src/test/incremental_sorter_test.cc
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/incremental_sorter_test obj/gtest_main.o obj/gtest-all.o obj/incremental_sorter_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/lsh_table_test.o src/test/lsh_table_test.cc
In file included from external/eigen/Eigen/Core:418,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/Product.h: In instantiation of ‘Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; _Rhs = Eigen::Matrix<float, -1, 1>; int Option = 0; Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<float, -1, 1>]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:412:10:   required from ‘const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>]’
src/include/falconn/core/hyperplane_hash.h:382:66:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/Product.h:93:86: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
   93 |     EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)
      |                                                                                      ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:537:7:   required from ‘Eigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:379:29:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/test/lsh_table_test.cc:428:47:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:472,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/ProductEvaluators.h: In instantiation of ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’:
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/ProductEvaluators.h:378:15: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
  378 |     LhsNested actual_lhs(lhs);
      |               ^~~~~~~~~~
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:473,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = float; LhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 0>; bool ConjugateLhs = false; RhsScalar = float; RhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 1>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = float]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:239:134:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:186:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  186 |   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:187:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  187 |   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >]’
external/eigen/Eigen/src/Core/GeneralProduct.h:282:40:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:448,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/MapBase.h:284:14: note: because ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’
  284 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/test/lsh_table_test.cc:78:79:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/lsh_table.h:14,
                 from src/test/lsh_table_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/lsh_table_test obj/gtest_main.o obj/gtest-all.o obj/lsh_table_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -c -o obj/nn_query_test.o src/test/nn_query_test.cc
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::div_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<float, -1, 1>; Eigen::DenseBase<Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/Dot.h:147:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<float, -1, 1>]’
src/test/nn_query_test.cc:51:16:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:418,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/Product.h: In instantiation of ‘Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; _Rhs = Eigen::Matrix<float, -1, 1>; int Option = 0; Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<float, -1, 1>]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:412:10:   required from ‘const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>]’
src/include/falconn/core/hyperplane_hash.h:382:66:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/Product.h:93:86: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
   93 |     EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)
      |                                                                                      ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >]’
src/include/falconn/core/hyperplane_hash.h:422:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/test/nn_query_test.cc:147:61:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>::Block(const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >]’
src/include/falconn/core/hyperplane_hash.h:413:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_all_tables(const DerivedVectorT&, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:47:7:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::HashTransformation::apply(const VectorT&, falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType*) const [with Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/lsh_function_helpers.h:108:5:   required from ‘void falconn::core::HashObjectQuery<HashFunction>::get_probes_by_table(const VectorType&, std::vector<std::vector<typename HashFunction::HashType> >*, int_fast64_t) [with HashFunction = falconn::core::HyperplaneHashSparse<float>; falconn::core::HashObjectQuery<HashFunction>::VectorType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; typename HashFunction::HashType = unsigned int; int_fast64_t = long int]’
src/include/falconn/core/lsh_table.h:228:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::Query::get_unique_candidates_internal(const PointType&, int_fast64_t, int_fast64_t, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast64_t = long int]’
src/include/falconn/core/lsh_table.h:191:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::Query::get_unique_candidates(const PointType&, int_fast64_t, int_fast64_t, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast64_t = long int]’
src/include/falconn/core/nn_query.h:40:5:   required from ‘LSHTableKeyType falconn::core::NearestNeighborQuery<LSHTableQuery, LSHTablePointType, LSHTableKeyType, ComparisonPointType, DistanceType, DistanceFunction, DataStorage>::find_nearest_neighbor(const LSHTablePointType&, const ComparisonPointType&, int_fast64_t, int_fast64_t) [with LSHTableQuery = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> > >::Query; LSHTablePointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; LSHTableKeyType = int; ComparisonPointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float>; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast64_t = long int]’
src/test/nn_query_test.cc:153:58:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:451,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/Block.h: In instantiation of ‘Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’:
external/eigen/Eigen/src/Core/Block.h:166:59:   required from ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/Block.h:142:59:   required from ‘Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index, Eigen::Index, Eigen::Index, Eigen::Index) [with XprType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = false; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/VectorBlock.h:78:61:   required from ‘Eigen::VectorBlock<MatrixType, Size>::VectorBlock(VectorType&, Eigen::Index, Eigen::Index) [with VectorType = const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; int Size = -1; Eigen::Index = long int]’
external/eigen/Eigen/src/Core/../plugins/BlockMethods.h:900:10:   required from ‘Eigen::DenseBase<Derived>::ConstSegmentReturnType Eigen::DenseBase<Derived>::segment(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>; Eigen::DenseBase<Derived>::ConstSegmentReturnType = const Eigen::VectorBlock<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1>; Eigen::Index = long int]’
src/include/falconn/core/hyperplane_hash.h:422:32:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/test/nn_query_test.cc:147:61:   required from here
external/eigen/Eigen/src/Core/Block.h:375:62: warning: implicitly-declared ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>&)’ is deprecated [-Wdeprecated-copy]
  375 |         m_xpr(xpr), m_startRow(startRow), m_startCol(startCol)
      |                                                              ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = 1; bool InnerPanel = true]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator+=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true>, -1, 1, false> >; Derived = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:422:12:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/test/nn_query_test.cc:147:61:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:797:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, 1, true> >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/core/hyperplane_hash.h:47:7:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::HashTransformation::apply(const VectorT&, falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType*) const [with Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::TransformedVectorType = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/lsh_function_helpers.h:108:5:   required from ‘void falconn::core::HashObjectQuery<HashFunction>::get_probes_by_table(const VectorType&, std::vector<std::vector<typename HashFunction::HashType> >*, int_fast64_t) [with HashFunction = falconn::core::HyperplaneHashSparse<float>; falconn::core::HashObjectQuery<HashFunction>::VectorType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; typename HashFunction::HashType = unsigned int; int_fast64_t = long int]’
src/include/falconn/core/lsh_table.h:228:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::Query::get_unique_candidates_internal(const PointType&, int_fast64_t, int_fast64_t, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast64_t = long int]’
src/include/falconn/core/lsh_table.h:191:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::Query::get_unique_candidates(const PointType&, int_fast64_t, int_fast64_t, std::vector<KeyType>*) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast64_t = long int]’
src/include/falconn/core/nn_query.h:40:5:   required from ‘LSHTableKeyType falconn::core::NearestNeighborQuery<LSHTableQuery, LSHTablePointType, LSHTableKeyType, ComparisonPointType, DistanceType, DistanceFunction, DataStorage>::find_nearest_neighbor(const LSHTablePointType&, const ComparisonPointType&, int_fast64_t, int_fast64_t) [with LSHTableQuery = falconn::core::StaticLSHTable<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >, int, falconn::core::HyperplaneHashSparse<float>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> > >::Query; LSHTablePointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; LSHTableKeyType = int; ComparisonPointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceSparse<float>; DataStorage = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast64_t = long int]’
src/test/nn_query_test.cc:153:58:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/CwiseNullaryOp.h:501:10:   required from ‘Derived& Eigen::DenseBase<Derived>::setZero() [with Derived = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:420:5:   required from ‘void falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT*) const [with CoordinateType = float; HashType = unsigned int; IndexType = int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedVectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; int_fast32_t = long int; falconn::core::HyperplaneHashSparse<CoordinateType, HashType, IndexType>::DerivedTransformedVectorT = Eigen::Matrix<float, -1, 1>]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; Derived = falconn::core::HyperplaneHashSparse<float>; VectorT = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > >; KeyType = int; LSH = falconn::core::HyperplaneHashSparse<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<std::vector<std::pair<int, float>, std::allocator<std::pair<int, float> > > >; int_fast32_t = long int]’
src/test/nn_query_test.cc:147:61:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:472,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/ProductEvaluators.h: In instantiation of ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’:
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/ProductEvaluators.h:378:15: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
  378 |     LhsNested actual_lhs(lhs);
      |               ^~~~~~~~~~
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:473,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = float; LhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 0>; bool ConjugateLhs = false; RhsScalar = float; RhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 1>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = float]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:239:134:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:186:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  186 |   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:187:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  187 |   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >]’
external/eigen/Eigen/src/Core/GeneralProduct.h:282:40:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:448,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/MapBase.h:284:14: note: because ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’
  284 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/core/hyperplane_hash.h:382:10:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::HyperplaneHashDense<float>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/include/falconn/core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int_fast32_t = long int]’
src/test/nn_query_test.cc:83:61:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/core/../falconn_global.h:8,
                 from src/include/falconn/core/nn_query.h:13,
                 from src/test/nn_query_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o test_bin/nn_query_test obj/gtest_main.o obj/gtest-all.o obj/nn_query_test.o -pthread
mkdir -p test_bin
g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -I external/googletest/googletest/include -I external/googletest/googlemock/include -c -o obj/pipe_generation_test.o src/test/pipe_generation_test.cc
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h: In member function ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&)’:
src/include/falconn/experimental/pipes.h:527:20: error: use of ‘auto’ in lambda parameter declaration only available with ‘-std=c++14’ or ‘-std=gnu++14’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                    ^~~~
src/include/falconn/experimental/pipes.h:527:28: error: use of ‘auto’ in lambda parameter declaration only available with ‘-std=c++14’ or ‘-std=gnu++14’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                            ^~~~
src/include/falconn/experimental/pipes.h: In lambda function:
src/include/falconn/experimental/pipes.h:527:47: error: request for member ‘key’ in ‘x’, which is of non-class type ‘int’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                                               ^~~
src/include/falconn/experimental/pipes.h:527:55: error: request for member ‘key’ in ‘y’, which is of non-class type ‘int’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                                                       ^~~
In file included from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/code_generation.h: In constructor ‘falconn::experimental::TopKPipeParameters<ScorerType>::TopKPipeParameters(int32_t, ScorerType, bool, int32_t)’:
src/include/falconn/experimental/code_generation.h:207:22: error: ‘make_unique’ is not a member of ‘std’
  207 |         scorer_(std::make_unique<ScorerType>(scorer)),
      |                      ^~~~~~~~~~~
src/include/falconn/experimental/code_generation.h:16:1: note: ‘std::make_unique’ is defined in header ‘<memory>’; did you forget to ‘#include <memory>’?
   15 | #include <nlohmann/json.hpp>
  +++ |+#include <memory>
   16 | 
src/include/falconn/experimental/code_generation.h:207:44: error: expected primary-expression before ‘>’ token
  207 |         scorer_(std::make_unique<ScorerType>(scorer)),
      |                                            ^
src/include/falconn/experimental/code_generation.h: In constructor ‘falconn::experimental::TopKPipeParameters<ScorerType>::TopKPipeParameters(const json&)’:
src/include/falconn/experimental/code_generation.h:214:22: error: ‘make_unique’ is not a member of ‘std’
  214 |         scorer_(std::make_unique<ScorerType>(j.at("scorer"))),
      |                      ^~~~~~~~~~~
src/include/falconn/experimental/code_generation.h:214:22: note: ‘std::make_unique’ is defined in header ‘<memory>’; did you forget to ‘#include <memory>’?
src/include/falconn/experimental/code_generation.h:214:44: error: expected primary-expression before ‘>’ token
  214 |         scorer_(std::make_unique<ScorerType>(j.at("scorer"))),
      |                                            ^
src/test/pipe_generation_test.cc: At global scope:
src/test/pipe_generation_test.cc:36:3: error: ‘execute_query’ function uses ‘auto’ type specifier without trailing return type
   36 |   auto execute_query(int32_t worker_id,
      |   ^~~~
src/test/pipe_generation_test.cc:36:3: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
src/test/pipe_generation_test.cc:115:3: error: ‘execute_query’ function uses ‘auto’ type specifier without trailing return type
  115 |   auto execute_query(int32_t worker_id,
      |   ^~~~
src/test/pipe_generation_test.cc:115:3: note: deduced return type only available with ‘-std=c++14’ or ‘-std=gnu++14’
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Matrix<float, -1, 1>; RhsType = const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Matrix<float, -1, 1>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/MatrixCwiseBinaryOps.h:25:10:   required from ‘const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Derived = Eigen::Matrix<float, -1, 1>; typename Eigen::internal::traits<OtherDerived>::Scalar = float; typename Eigen::internal::traits<T>::Scalar = float]’
src/include/falconn/experimental/../core/random_projection_sketches.h:55:54:   required from ‘void falconn::core::sketches_helpers::RandomProjectionSketchesWorker<PointType, DataStorageType>::compute_sketch(const PointType&, uint64_t*) [with PointType = Eigen::Matrix<float, -1, 1>; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; uint64_t = long unsigned int]’
src/include/falconn/experimental/../core/random_projection_sketches.h:150:7:   required from ‘falconn::core::RandomProjectionSketches<PointType, KeyType, DataStorageType>::RandomProjectionSketches(int32_t, const DataStorageType&, int32_t, uint_fast64_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int32_t = int; uint_fast64_t = long unsigned int]’
src/test/pipe_generation_test.cc:34:44:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >::Map(const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:424,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/Assign.h:55:30: note: because ‘Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::MatrixBase<Derived>&) [with Derived = Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’
   55 | EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)
      |                              ^~~~~~~~~~~~~~~~~~~
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1, _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Iterator2 = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1836:14:   required from ‘void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1874:25:   required from ‘void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1960:31:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:51:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<int, int>::Item&, falconn::core::HeapBase<int, int>::Item&)’
  143 |         { return bool(_M_comp(*__it1, *__it2)); }
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<int, int>::Item’ to ‘int’
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1, _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Iterator2 = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1836:14:   required from ‘void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1874:25:   required from ‘void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1960:31:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:52:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<float, int>::Item&, falconn::core::HeapBase<float, int>::Item&)’
  143 |         { return bool(_M_comp(*__it1, *__it2)); }
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<float, int>::Item’ to ‘int’
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1, _Iterator2) [with _Iterator1 = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Iterator2 = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1836:14:   required from ‘void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1874:25:   required from ‘void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1960:31:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:127:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<int, int>::Item&, falconn::core::HeapBase<int, int>::Item&)’
  143 |         { return bool(_M_comp(*__it1, *__it2)); }
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:143:18: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<int, int>::Item’ to ‘int’
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >]’
external/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Map<const Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >; Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’
src/include/falconn/experimental/../core/random_projection_sketches.h:55:54:   required from ‘void falconn::core::sketches_helpers::RandomProjectionSketchesWorker<PointType, DataStorageType>::compute_sketch(const PointType&, uint64_t*) [with PointType = Eigen::Matrix<float, -1, 1>; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; uint64_t = long unsigned int]’
src/include/falconn/experimental/../core/random_projection_sketches.h:150:7:   required from ‘falconn::core::RandomProjectionSketches<PointType, KeyType, DataStorageType>::RandomProjectionSketches(int32_t, const DataStorageType&, int32_t, uint_fast64_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int32_t = int; uint_fast64_t = long unsigned int]’
src/test/pipe_generation_test.cc:34:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Assign.h:66:28:   required from ‘Derived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 0, Eigen::Stride<0, 0> >]’
src/include/falconn/experimental/../core/random_projection_sketches.h:60:63:   required from ‘void falconn::core::sketches_helpers::RandomProjectionSketchesWorker<PointType, DataStorageType>::compute_sketch(const PointType&, uint64_t*) [with PointType = Eigen::Matrix<float, -1, 1>; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; uint64_t = long unsigned int]’
src/include/falconn/experimental/../core/random_projection_sketches.h:150:7:   required from ‘falconn::core::RandomProjectionSketches<PointType, KeyType, DataStorageType>::RandomProjectionSketches(int32_t, const DataStorageType&, int32_t, uint_fast64_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int32_t = int; uint_fast64_t = long unsigned int]’
src/test/pipe_generation_test.cc:34:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Val_comp_iter<_Compare>::operator()(_Value&, _Iterator) [with _Value = falconn::core::HeapBase<int, int>::Item; _Iterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1817:20:   required from ‘void std::__unguarded_linear_insert(_RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Val_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1844:36:   required from ‘void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1874:25:   required from ‘void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1960:31:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:51:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<int, int>::Item&, falconn::core::HeapBase<int, int>::Item&)’
  215 |  { return bool(_M_comp(__val, *__it)); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<int, int>::Item’ to ‘int’
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Val_comp_iter<_Compare>::operator()(_Value&, _Iterator) [with _Value = falconn::core::HeapBase<float, int>::Item; _Iterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1817:20:   required from ‘void std::__unguarded_linear_insert(_RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Val_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1844:36:   required from ‘void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1874:25:   required from ‘void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1960:31:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:52:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<float, int>::Item&, falconn::core::HeapBase<float, int>::Item&)’
  215 |  { return bool(_M_comp(__val, *__it)); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<float, int>::Item’ to ‘int’
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Val_comp_iter<_Compare>::operator()(_Value&, _Iterator) [with _Value = falconn::core::HeapBase<int, int>::Item; _Iterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1817:20:   required from ‘void std::__unguarded_linear_insert(_RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Val_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1844:36:   required from ‘void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1874:25:   required from ‘void std::__final_insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1960:31:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:127:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<int, int>::Item&, falconn::core::HeapBase<int, int>::Item&)’
  215 |  { return bool(_M_comp(__val, *__it)); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:215:11: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<int, int>::Item’ to ‘int’
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/experimental/../core/random_projection_sketches.h:46:16:   required from ‘falconn::core::sketches_helpers::RandomProjectionSketchesWorker<PointType, DataStorageType>::RandomProjectionSketchesWorker(int32_t, int32_t, int32_t, const std::vector<typename falconn::PointTypeTraits<PointType>::ScalarType>&) [with PointType = Eigen::Matrix<float, -1, 1>; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int32_t = int; typename falconn::PointTypeTraits<PointType>::ScalarType = float]’
src/include/falconn/experimental/../core/random_projection_sketches.h:143:27:   required from ‘falconn::core::RandomProjectionSketches<PointType, KeyType, DataStorageType>::RandomProjectionSketches(int32_t, const DataStorageType&, int32_t, uint_fast64_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int32_t = int; uint_fast64_t = long unsigned int]’
src/test/pipe_generation_test.cc:34:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/include/falconn/experimental/../core/polytope_hash.h:157:25:   required from ‘void falconn::core::CrossPolytopeHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; Derived = falconn::core::CrossPolytopeHashDense<>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/experimental/pipes.h:317:7:   required from ‘void falconn::experimental::TablePipe<PointType>::setup_table_range(int_fast32_t, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/experimental/pipes.h:258:44:   required from ‘falconn::experimental::TablePipe<PointType>::TablePipe(int32_t, const std::vector<Eigen::Matrix<float, -1, 1>, std::allocator<Eigen::Matrix<float, -1, 1> > >&, const falconn::experimental::HashProducer<PointType>&, int_fast32_t, const string&) [with PointType = Eigen::Matrix<float, -1, 1>; int32_t = int; int_fast32_t = long int; std::string = std::__cxx11::basic_string<char>]’
src/test/pipe_generation_test.cc:34:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_comp_val<_Compare>::operator()(_Iterator, _Value&) [with _Iterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Value = falconn::core::HeapBase<int, int>::Item; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:133:48:   required from ‘void std::__push_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare&) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Distance = long int; _Tp = falconn::core::HeapBase<int, int>::Item; _Compare = __gnu_cxx::__ops::_Iter_comp_val<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:237:23:   required from ‘void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Distance = long int; _Tp = falconn::core::HeapBase<int, int>::Item; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:342:22:   required from ‘void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1661:23:   required from ‘void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1922:25:   required from ‘void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1937:27:   required from ‘void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Size = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1957:25:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:51:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<int, int>::Item&, falconn::core::HeapBase<int, int>::Item&)’
  177 |  { return bool(_M_comp(*__it, __val)); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::DeduplicationPipeThreadUnsafe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::TablePipe<Eigen::Matrix<float, -1, 1> >::Iterator<falconn::experimental::HashProducer<Eigen::Matrix<float, -1, 1> >::Iterator> >; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<int, int>::Item’ to ‘int’
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_comp_val<_Compare>::operator()(_Iterator, _Value&) [with _Iterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Value = falconn::core::HeapBase<float, int>::Item; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:133:48:   required from ‘void std::__push_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare&) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Distance = long int; _Tp = falconn::core::HeapBase<float, int>::Item; _Compare = __gnu_cxx::__ops::_Iter_comp_val<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:237:23:   required from ‘void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Distance = long int; _Tp = falconn::core::HeapBase<float, int>::Item; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:342:22:   required from ‘void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1661:23:   required from ‘void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1922:25:   required from ‘void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1937:27:   required from ‘void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Size = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1957:25:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<float, int>::Item*, std::vector<falconn::core::HeapBase<float, int>::Item, std::allocator<falconn::core::HeapBase<float, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:52:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<float, int>::Item&, falconn::core::HeapBase<float, int>::Item&)’
  177 |  { return bool(_M_comp(*__it, __val)); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; ScorerType = falconn::experimental::DistanceScorer<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<float, int>::Item’ to ‘int’
In file included from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:71,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/char_traits.h:39,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/string:40,
                 from /home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/stdexcept:39,
                 from src/include/falconn/experimental/../falconn_global.h:4,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_comp_val<_Compare>::operator()(_Iterator, _Value&) [with _Iterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Value = falconn::core::HeapBase<int, int>::Item; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’:
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:133:48:   required from ‘void std::__push_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare&) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Distance = long int; _Tp = falconn::core::HeapBase<int, int>::Item; _Compare = __gnu_cxx::__ops::_Iter_comp_val<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:237:23:   required from ‘void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Distance = long int; _Tp = falconn::core::HeapBase<int, int>::Item; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_heap.h:342:22:   required from ‘void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1661:23:   required from ‘void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1922:25:   required from ‘void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1937:27:   required from ‘void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Size = long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:1957:25:   required from ‘void std::__sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)> >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algo.h:4850:18:   required from ‘void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = __gnu_cxx::__normal_iterator<falconn::core::HeapBase<int, int>::Item*, std::vector<falconn::core::HeapBase<int, int>::Item, std::allocator<falconn::core::HeapBase<int, int>::Item> > >; _Compare = falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>]’
src/include/falconn/experimental/pipes.h:525:16:   required from ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]’
src/include/falconn/experimental/pipes.h:633:52:   required from ‘typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator falconn::experimental::TopKPipe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; typename falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::Iterator = falconn::experimental::TopKPipeThreadUnsafe<falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> > >::Iterator; int32_t = int]’
src/test/pipe_generation_test.cc:127:58:   required from here
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: error: no match for call to ‘(falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>) (falconn::core::HeapBase<int, int>::Item&, falconn::core::HeapBase<int, int>::Item&)’
  177 |  { return bool(_M_comp(*__it, __val)); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: note: candidate: ‘void (*)(int, int)’ <conversion>
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/predefined_ops.h:177:11: note:   candidate expects 3 arguments, 3 provided
In file included from src/include/falconn/experimental/code_generation.h:7,
                 from src/test/pipe_generation_test.cc:1:
src/include/falconn/experimental/pipes.h:527:17: note: candidate: ‘falconn::experimental::TopKPipeThreadUnsafe<ScorerType>::run(int32_t, IteratorType&, ScorerType&) [with IteratorType = falconn::experimental::ExhaustiveProducer::Iterator; ScorerType = falconn::core::RandomProjectionSketches<Eigen::Matrix<float, -1, 1> >; int32_t = int]::<lambda(int, int)>’
  527 |                 [](auto x, auto y) { return x.key > y.key; });
      |                 ^
src/include/falconn/experimental/pipes.h:527:17: note:   no known conversion for argument 1 from ‘falconn::core::HeapBase<int, int>::Item’ to ‘int’
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/experimental/../core/random_projection_sketches.h:27:7:   required from ‘typename __gnu_cxx::__enable_if<(! std::__is_scalar<_Tp>::__value), void>::__type std::__fill_a(_ForwardIterator, _ForwardIterator, const _Tp&) [with _ForwardIterator = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >*; _Tp = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >; typename __gnu_cxx::__enable_if<(! std::__is_scalar<_Tp>::__value), void>::__type = void]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_algobase.h:749:20:   required from ‘void std::fill(_ForwardIterator, _ForwardIterator, const _Tp&) [with _ForwardIterator = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >*; _Tp = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/vector.tcc:536:14:   required from ‘void std::vector<_Tp, _Alloc>::_M_fill_insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >; _Alloc = std::allocator<falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > > >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >*, std::vector<falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >, std::allocator<falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > > > > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >*; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >]’
/home/soft/centOS/compilers/gcc/9.1.0_new/include/c++/9.1.0/bits/stl_vector.h:957:4:   required from ‘void std::vector<_Tp, _Alloc>::resize(std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >; _Alloc = std::allocator<falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > > >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = falconn::core::sketches_helpers::RandomProjectionSketchesWorker<Eigen::Matrix<float, -1, 1>, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> > >]’
src/include/falconn/experimental/../core/random_projection_sketches.h:141:5:   required from ‘falconn::core::RandomProjectionSketches<PointType, KeyType, DataStorageType>::RandomProjectionSketches(int32_t, const DataStorageType&, int32_t, uint_fast64_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1> >; int32_t = int; uint_fast64_t = long unsigned int]’
src/test/pipe_generation_test.cc:34:44:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/experimental/../falconn_global.h:8,
                 from src/include/falconn/experimental/code_generation.h:6,
                 from src/test/pipe_generation_test.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
make: *** [test_bin/pipe_generation_test] Error 1


=========================================================================


g++ -std=c++11 -DNDEBUG -Wall -Wextra -march=native -O3 -I external/eigen -I src/include -I external/simple-serializer -I external/nlohmann -mmmx -msse2 -o random_benchmark src/benchmark/random_benchmark.cc -pthread
In file included from src/include/falconn/wrapper/cpp_wrapper_impl.h:9,
                 from src/include/falconn/lsh_nn_table.h:484,
                 from src/benchmark/random_benchmark.cc:1:
src/include/falconn/wrapper/data_storage_adapter.h: In instantiation of ‘static std::unique_ptr<falconn::core::ArrayDataStorage<PointType, KeyType> > falconn::wrapper::DataStorageAdapter<std::vector<PointType> >::construct_data_storage(const std::vector<PointType>&) [with KeyType = int; PointType = Eigen::Matrix<float, -1, 1>]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:643:79:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
src/include/falconn/wrapper/data_storage_adapter.h:36:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
   36 |     return std::move(res);
      |                         ^
src/include/falconn/wrapper/data_storage_adapter.h:36:25: note: remove ‘std::move’ call
In file included from src/include/falconn/lsh_nn_table.h:484,
                 from src/benchmark/random_benchmark.cc:1:
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘static std::unique_ptr<falconn::core::CrossPolytopeHashDense<CoordinateType, HashType> > falconn::wrapper::PointTypeTraitsInternal<Eigen::Matrix<Scalar, -1, 1> >::construct_cp_hash(const falconn::LSHConstructionParameters&) [with HashType = unsigned int; CoordinateType = float]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:707:69:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
   49 |     return std::move(res);
      |                         ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘static std::unique_ptr<falconn::core::CrossPolytopeHashDense<CoordinateType, HashType> > falconn::wrapper::PointTypeTraitsInternal<Eigen::Matrix<Scalar, -1, 1> >::construct_cp_hash(const falconn::LSHConstructionParameters&) [with HashType = long unsigned int; CoordinateType = float]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:707:69:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<long unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:665:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move]
src/include/falconn/wrapper/cpp_wrapper_impl.h:49:25: note: remove ‘std::move’ call
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::div_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::div_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::div_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::div_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/SelfCwiseBinaryOp.h:45:28:   required from ‘Derived& Eigen::DenseBase<Derived>::operator/=(const Scalar&) [with Derived = Eigen::Matrix<float, -1, 1>; Eigen::DenseBase<Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/Dot.h:147:15:   required from ‘void Eigen::MatrixBase<Derived>::normalize() [with Derived = Eigen::Matrix<float, -1, 1>]’
src/benchmark/random_benchmark.cc:212:19:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:208:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) [with _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/benchmark/random_benchmark.cc:221:33:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/benchmark/random_benchmark.cc:228:32:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:710:32:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/Matrix.h:225:24:   required from ‘Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> >, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Matrix<float, -1, 1> > >; _Scalar = float; int _Rows = -1; int _Cols = 1; int _Options = 0; int _MaxRows = -1; int _MaxCols = 1]’
src/benchmark/random_benchmark.cc:232:30:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:418,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/Product.h: In instantiation of ‘Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; _Rhs = Eigen::Matrix<float, -1, 1>; int Option = 0; Eigen::Product<Lhs, Rhs, Option>::Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Eigen::Product<Lhs, Rhs, Option>::Rhs = Eigen::Matrix<float, -1, 1>]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:412:10:   required from ‘const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, -1, 1>; Derived = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:382:66:   required from ‘void falconn::core::HyperplaneHashDense<CoordinateType, HashType>::get_multiplied_vector_single_table(const DerivedVectorT&, int_fast32_t, falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT*) const [with CoordinateType = float; HashType = unsigned int; falconn::core::HyperplaneHashDense<CoordinateType, HashType>::DerivedVectorT = Eigen::Matrix<float, -1, 1>; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/hyperplane_hash.h:73:9:   required from ‘void falconn::core::HyperplaneHashBase<Derived, VectorT, CoordinateType, HashT>::BatchHash<BatchVectorType>::batch_hash_single_table(const BatchVectorType&, int_fast32_t, std::vector<KeyType>*) [with BatchVectorType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; Derived = falconn::core::HyperplaneHashDense<float, unsigned int>; VectorT = Eigen::Matrix<float, -1, 1>; CoordinateType = float; HashT = unsigned int; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:283:7:   required from ‘void falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::setup_table_range(int_fast32_t, int_fast32_t, const DataStorageType&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float, unsigned int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/wrapper/../core/lsh_table.h:99:31:   required from ‘falconn::core::StaticLSHTable<PointType, KeyType, LSH, HashType, HashTable, DataStorageType>::StaticLSHTable(LSH*, HashTable*, const DataStorageType&, int_fast32_t) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; LSH = falconn::core::HyperplaneHashDense<float, unsigned int>; HashType = unsigned int; HashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorageType = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast32_t = long int]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:834:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/Product.h:93:86: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
   93 |     EIGEN_DEVICE_FUNC Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)
      |                                                                                      ^
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, -1, 1>, const Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::CrossPolytopeHashDense<float, unsigned int>, std::default_delete<falconn::core::CrossPolytopeHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:708:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:472,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/ProductEvaluators.h: In instantiation of ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’:
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:728:41:   required from ‘Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>; Derived = Eigen::Matrix<float, -1, 1>]’
external/eigen/Eigen/src/Core/PlainObjectBase.h:812:7:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/ProductEvaluators.h:378:15: warning: implicitly-declared ‘constexpr Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>::Block(const Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>&)’ is deprecated [-Wdeprecated-copy]
  378 |     LhsNested actual_lhs(lhs);
      |               ^~~~~~~~~~
In file included from external/eigen/Eigen/Core:72,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/util/Macros.h:827:52: note: because ‘Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>’ has user-provided ‘Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>& Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::operator=(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::Matrix<float, -1, -1>; int BlockRows = -1; int BlockCols = -1; bool InnerPanel = false]’
  827 |     EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Derived& operator=(const Derived& other) \
      |                                                    ^~~~~~~~
external/eigen/Eigen/src/Core/util/Macros.h:839:53: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR’
  839 | #define EIGEN_INHERIT_ASSIGNMENT_OPERATORS(Derived) EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR(Derived)
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/Block.h:161:5: note: in expansion of macro ‘EIGEN_INHERIT_ASSIGNMENT_OPERATORS’
  161 |     EIGEN_INHERIT_ASSIGNMENT_OPERATORS(BlockImpl)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:473,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h: In instantiation of ‘static void Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::run(Index, Index, const LhsMapper&, const RhsMapper&, Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar*, Index, RhsScalar) [with Index = long int; LhsScalar = float; LhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 0>; bool ConjugateLhs = false; RhsScalar = float; RhsMapper = Eigen::internal::const_blas_data_mapper<float, long int, 1>; bool ConjugateRhs = false; int Version = 0; Eigen::internal::general_matrix_vector_product<Index, LhsScalar, LhsMapper, 0, ConjugateLhs, RhsScalar, RhsMapper, ConjugateRhs, Version>::ResScalar = float]’:
external/eigen/Eigen/src/Core/GeneralProduct.h:239:134:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   required from ‘static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; int Options = 0; Scalar = float; Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::SrcXprType = Eigen::Product<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, 0>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   [ skipping 15 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:186:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  186 |   const Index offset1 = (FirstAligned && alignmentStep==1)?3:1;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
external/eigen/Eigen/src/Core/products/GeneralMatrixVector.h:187:39: warning: enum constant in boolean context [-Wint-in-bool-context]
  187 |   const Index offset3 = (FirstAligned && alignmentStep==1)?1:3;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:440,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of ‘Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; RhsType = const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’:
external/eigen/Eigen/src/Core/../plugins/CommonCwiseBinaryOps.h:50:1:   required from ‘typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type Eigen::operator*(const T&, const StorageBaseType&) [with T = float; Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; typename Eigen::internal::enable_if<true, const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type, typename Eigen::internal::traits<T>::Scalar>, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, typename Eigen::internal::traits<T>::Scalar, Eigen::internal::scalar_product_op<T, typename Eigen::internal::traits<T>::Scalar> > >::value>::type>::type, const Derived> >::type = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Eigen::MatrixBase<Derived>::StorageBaseType = Eigen::MatrixBase<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >]’
external/eigen/Eigen/src/Core/GeneralProduct.h:282:40:   required from ‘static void Eigen::internal::gemv_dense_selector<2, 0, true>::run(const Lhs&, const Rhs&, Dest&, const typename Dest::Scalar&) [with Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Dest = Eigen::Matrix<float, -1, 1>; typename Dest::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:383:34:   required from ‘static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::scaleAndAddTo(Dest&, const Lhs&, const Rhs&, const Scalar&) [with Dest = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 7>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:361:27:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::scaleAndAddTo(Dst&, const Lhs&, const Rhs&, const Scalar&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>; Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::Scalar = float]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:349:33:   required from ‘static void Eigen::internal::generic_product_impl_base<Lhs, Rhs, Derived>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, -1, 1>; Lhs = Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>; Rhs = Eigen::Matrix<float, -1, 1>; Derived = Eigen::internal::generic_product_impl<Eigen::Block<const Eigen::Matrix<float, -1, -1>, -1, -1, false>, Eigen::Matrix<float, -1, 1>, Eigen::DenseShape, Eigen::DenseShape, 7>]’
external/eigen/Eigen/src/Core/ProductEvaluators.h:148:43:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:105:49: warning: implicitly-declared ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >::Map(const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >&)’ is deprecated [-Wdeprecated-copy]
  105 |       : m_lhs(aLhs), m_rhs(aRhs), m_functor(func)
      |                                                 ^
In file included from external/eigen/Eigen/Core:448,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/MapBase.h:284:14: note: because ‘Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >’ has user-provided ‘Derived& Eigen::MapBase<Derived, 1>::operator=(const Eigen::MapBase<Derived, 1>&) [with Derived = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >]’
  284 |     Derived& operator=(const MapBase& other)
      |              ^~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > > >, Eigen::internal::add_assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, -1, 1> >, const Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >; Func = Eigen::internal::add_assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/CwiseBinaryOp.h:177:18:   [ skipping 21 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::Matrix<float, -1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::Matrix<float, -1, 1>; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 22 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, -1, 1> >, Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, -1, 1>; SrcXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, -1, 1>; Src = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 23 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h: In instantiation of ‘struct Eigen::internal::copy_using_evaluator_traits<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float> >’:
external/eigen/Eigen/src/Core/AssignEvaluator.h:607:49:   required from ‘class Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> > >, Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> > >, Eigen::internal::assign_op<float, float>, 0>’
external/eigen/Eigen/src/Core/AssignEvaluator.h:739:10:   required from ‘void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:879:31:   required from ‘static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; SrcXprType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:836:49:   required from ‘void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:804:27:   required from ‘void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Map<Eigen::Matrix<float, -1, 1>, 8, Eigen::Stride<0, 0> >; Src = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1> >; Func = Eigen::internal::assign_op<float, float>; typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type = void*]’
external/eigen/Eigen/src/Core/AssignEvaluator.h:782:18:   [ skipping 24 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
src/include/falconn/wrapper/cpp_wrapper_impl.h:723:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup2(V) [with V = std::tuple<unsigned int, std::unique_ptr<falconn::core::HyperplaneHashDense<float, unsigned int>, std::default_delete<falconn::core::HyperplaneHashDense<float, unsigned int> > > >; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:683:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup1(V) [with V = std::tuple<unsigned int>; PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:661:7:   required from ‘void falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup0() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:651:5:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::wrapper::StaticTableFactory<PointType, KeyType, PointSet>::setup() [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/include/falconn/wrapper/cpp_wrapper_impl.h:884:19:   required from ‘std::unique_ptr<falconn::LSHNearestNeighborTable<PointType, KeyType> > falconn::construct_table(const PointSet&, const falconn::LSHConstructionParameters&) [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; PointSet = std::vector<Eigen::Matrix<float, -1, 1> >]’
src/benchmark/random_benchmark.cc:280:55:   required from here
external/eigen/Eigen/src/Core/AssignEvaluator.h:86:63: warning: enum constant in boolean context [-Wint-in-bool-context]
   86 |     MayLinearVectorize = bool(MightVectorize) && MayLinearize && DstHasDirectAccess
      |                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
In file included from external/eigen/Eigen/Core:420,
                 from external/eigen/Eigen/Dense:1,
                 from src/include/falconn/lsh_nn_table.h:10,
                 from src/benchmark/random_benchmark.cc:1:
external/eigen/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]
   90 |     MaySliceVectorize  = bool(MightVectorize) && bool(DstHasDirectAccess)
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from src/include/falconn/lsh_nn_table.h:484,
                 from src/benchmark/random_benchmark.cc:1:
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<long unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::StaticLinearProbingHashTable<long unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::STLHashTable<long unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::STLHashTable<long unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::BitPackedFlatHashTable<long unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, long unsigned int>, long unsigned int, falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, long unsigned int>; HashTableFactory = falconn::core::FlatHashTable<long unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<long unsigned int, int, falconn::core::FlatHashTable<long unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::CrossPolytopeHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::CrossPolytopeHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::EuclideanDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::StaticLinearProbingHashTable<unsigned int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::StaticLinearProbingHashTable<unsigned int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::STLHashTable<unsigned int, int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::STLHashTable<unsigned int, int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::BitPackedFlatHashTable<unsigned int, long int, long int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQuery<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_object(int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:536:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: warning: redundant move in return statement [-Wredundant-move]
  549 |     return std::move(nn_query);
      |                              ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:549:30: note: remove ‘std::move’ call
src/include/falconn/wrapper/cpp_wrapper_impl.h: In instantiation of ‘std::unique_ptr<falconn::LSHNearestNeighborQueryPool<PointType, KeyType> > falconn::wrapper::LSHNNTableWrapper<PointType, KeyType, DistanceType, DistanceFunction, LSHTable, LSHFunction, HashTableFactory, CompositeHashTable, DataStorage>::construct_query_pool(int_fast64_t, int_fast64_t, int_fast64_t) const [with PointType = Eigen::Matrix<float, -1, 1>; KeyType = int; DistanceType = float; DistanceFunction = falconn::core::CosineDistanceDense<float>; LSHTable = falconn::core::StaticLSHTable<Eigen::Matrix<float, -1, 1>, int, falconn::core::HyperplaneHashDense<float, unsigned int>, unsigned int, falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >, falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int> >; LSHFunction = falconn::core::HyperplaneHashDense<float, unsigned int>; HashTableFactory = falconn::core::FlatHashTable<unsigned int, int, int>::Factory; CompositeHashTable = falconn::core::StaticCompositeHashTable<unsigned int, int, falconn::core::FlatHashTable<unsigned int, int, int> >; DataStorage = falconn::core::ArrayDataStorage<Eigen::Matrix<float, -1, 1>, int>; int_fast64_t = long int]’:
src/include/falconn/wrapper/cpp_wrapper_impl.h:553:3:   required from here
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: warning: redundant move in return statement [-Wredundant-move]
  570 |     return std::move(nn_query_pool);
      |                                   ^
src/include/falconn/wrapper/cpp_wrapper_impl.h:570:35: note: remove ‘std::move’ call
-----------------------------------------------------------------------
FALCONN C++ random data benchmark

std::thread::hardware_concurrency(): 24
num_query_threads = 1

Data set parameters: 
n = 1000000
d = 128
num_queries = 1000
r = 0.707107
seed = 119417657
-----------------------------------------------------------------------
Generating data set ...
Generating queries ...

Computing true nearest neighbors via a linear scan ...
Average query time: 0.056696 seconds
-----------------------------------------------------------------------
Hyperplane hash

k = 19
l = 10
Number of probes = 2464
Construction time: 0.822026 seconds

Total experiment wall clock time: 1.932079e+00 seconds
Average query time (measured outside): 1.931869e-03 seconds
Empirical success probability: 0.894000

Query statistics:
Average total query time: 1.931530e-03 seconds
Average LSH time:         3.451930e-04 seconds
Average hash table time:  5.378974e-04 seconds
Average distance time:    1.047829e-03 seconds
Average number of candidates:        6408.063000
Average number of unique candidates: 6376.148000

Diagnostics:
Threading imbalance (total_wall_clock_time - sum of query times outside / num_threads): 0.000210 seconds (0.010869 % of the total wall clock time)
Outside - inside average total query time: 3.382790e-07 seconds (0.017510 %)
Unaccounted inside query time: 6.107420e-07 seconds (0.031620 %)
-----------------------------------------------------------------------
Cross polytope hash

k = 3
last_cp_dim = 16
num_rotations = 3
l = 10
Number of probes = 896
Construction time: 1.493249 seconds

Total experiment wall clock time: 5.327832e-01 seconds
Average query time (measured outside): 5.325809e-04 seconds
Empirical success probability: 0.912000

Query statistics:
Average total query time: 5.322708e-04 seconds
Average LSH time:         2.932640e-04 seconds
Average hash table time:  1.110653e-04 seconds
Average distance time:    1.275418e-04 seconds
Average number of candidates:        818.646000
Average number of unique candidates: 816.095000

Diagnostics:
Threading imbalance (total_wall_clock_time - sum of query times outside / num_threads): 0.000202 seconds (0.037974 % of the total wall clock time)
Outside - inside average total query time: 3.100800e-07 seconds (0.058222 %)
Unaccounted inside query time: 3.997300e-07 seconds (0.075099 %)
-----------------------------------------------------------------------
Summary:
Success probabilities:
  HP: 0.894000
  CP: 0.912000
Average query times (seconds):
  Linear scan time: 5.669601e-02
  HP time: 1.931869e-03
  CP time: 5.325809e-04
Speed-ups:
  HP vs linear scan: 29.347755
  CP vs linear scan: 106.455208
  CP vs HP: 3.627371
